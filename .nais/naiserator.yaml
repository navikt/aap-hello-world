apiVersion: "nais.io/v1alpha1"
kind: "Application"
metadata:
    annotations:
        nginx.ingress.kubernetes.io/proxy-body-size: "50M"
        nginx.ingress.kubernetes.io/proxy-read-timeout: "90"
        nais.io/read-only-file-system: "false"
        nais.io/run-as-user: "1001"
    name: soknad-api
    namespace: aap
    labels:
        team: aap
spec:
    secureLogs:
        enabled: true
    azure:
        application:
            enabled: true
    envFrom:
        -   secret: srvaap-selvbetjening
    gcp:
        permissions:
            -   resource:
                    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
                    kind: Project
                role: roles/cloudkms.cryptoKeyEncrypterDecrypter
            -   resource:
                    apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
                    kind: Project
                role: roles/cloudsql.client
        sqlInstances:
            -   name: aap-soknad-api-{{env}}
                type: POSTGRES_14
                databases:
                    -   name: aap-soknad-api-{{env}}
                        envVarPrefix: DB
        buckets:
            -   name: {{vedlegg-navn}}
                cascadingDelete: true
                lifecycleCondition:
                    numNewerVersions: 1
                    age: {{vedlegg-varighet}}
            -   name: {{mellomlagring-navn}}
                cascadingDelete: true
                lifecycleCondition:
                    numNewerVersions: 1
                    age: {{mellomlagring-varighet}}
    accessPolicy:
        inbound:
            rules:
                -   application: soknad
        outbound:
            rules:
                -   application: clamav
                    namespace: clamav
                -   application: pdfgen
                    namespace: aap
                    cluster: dev-gcp
                -   application: fss-proxy
                    namespace: aap
                    cluster: dev-fss
                -   application: digdir-krr-proxy
                    namespace: team-rocket
                    cluster: dev-gcp
                -   application: isdialogmelding
                    namespace: teamsykefravr
                    cluster: dev-gcp
    tokenx:
        enabled: true
    kafka:
        pool: {{kafka-pool}}
    port: 8080
    cpuThresholdPercentage: 50
    image: {{image}}
    liveness:
        path: /actuator/health/liveness
        initialDelay: 60
    readiness:
        path: /actuator/health/readiness
        initialDelay: 60
    prometheus:
        enabled: true
        path: /actuator/prometheus
    replicas:
        min: 2
        max: 2
        cpuThresholdPercentage: 50
    ingresses:
        - {{ingress}}
    resources:
        limits:
            cpu: 1500m
            memory: 3072Mi
        requests:
            cpu: 250m
            memory: 1536Mi
    env:
        -   name: MELLOMLAGRING_NAVN
            value: '{{mellomlagring-navn}}'
        -   name: VEDLEGG_NAVN
            value: '{{vedlegg-navn}}'