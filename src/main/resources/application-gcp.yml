info:
  cluster-name: ${nais.cluster.name}
  image-name : ${nais.app.image}
  app-name : ${nais.app.name}
  java-version : ${java.version}
  namespace-name: ${nais.namespace}
management:
  endpoint:
    env:
      additional-keys-to-sanitize: "client-jwk,private.jwk"
spring:
  kafka:
    properties:
      security:
        protocol: SSL
    ssl:
      endpoint:
        identification:
          algorithm:
      keystore:
         location: ${kafka.keystore.path}
         password: ${kafka.credstore.password}
         type: PKCS12
      truststore:
         location: ${kafka.truststore.path}
         password: ${kafka.credstore.password}
         type: JKS
    producer:
      client-id: ${spring.application.name}
      bootstrap-servers: ${kafka.brokers}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: com.fasterxml.jackson.databind.JsonSerializer
no.nav:
  security:
    jwt:
      client:
        registration:
          pdl-api:
            well-known-url: ${token.x.well.known.url}
            grant-type: urn:ietf:params:oauth:grant-type:token-exchange
            authentication:
              client-id: ${token.x.client.id}
              client-jwk: ${token.x.private.jwk}
              client-auth-method: private_key_jwt
      issuer:
        idporten:
          discovery-url: ${token.x.well.known.url}
          accepted-audience: ${token.x.client.id}